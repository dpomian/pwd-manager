name: Docker Build and Publish

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  generate-release-version:
    runs-on: ubuntu-latest
    outputs:
      generated_version: ${{ steps.output-version.outputs.generated_version }}
    permissions:
      contents: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - 
        name: Generate version
        uses: paulhatch/semantic-version@v5.4.0
        id: version
        with:
          tag_prefix: "v"
          major_pattern: "/((BREAKING CHANGE|BREAKING|breaking|MAJOR|major):?|\\S*!).*/"
          minor_pattern: '/((FEATURE|feature|MINOR|minor|FEAT|feat):?|\\S*?)/'
          version_format: '${major}.${minor}.${patch}'
      -
        name: Output version
        id: output-version
        run: |
          echo "generated_version=${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
  
    
  build-and-publish:
    needs: [generate-release-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}          

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ needs.generate-release-version.outputs.generated_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    needs: [generate-release-version,build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.generate-release-version.outputs.generated_version }}
          release_name: v${{ needs.generate-release-version.outputs.generated_version }}
          